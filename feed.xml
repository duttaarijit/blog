<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">



<title type="text">eLitmus Blog</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="/" />
<updated>2017-08-16T09:04:36+05:30</updated>
<id>/</id>
<author>
  <name>eLitmus.com</name>
  <uri>/</uri>
  <email>site-admin@elitmus.com</email>
</author>


<entry>
  <title type="html"><![CDATA[To the Goth Kids]]></title>
  <link rel="alternate" type="text/html" href="/career/to-the-goth-kids/"/>
  <id>/career/to-the-goth-kids</id>
  <updated>2017-07-28 10:38:41 +0530T00:00:00-00:00</updated>
  <published>2017-07-28T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#startups" term="startups" />
  <content type="html">
  
    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It seems like only recently, startups would hire folks to do just about everything, all at once, and then somehow, we’ve arrived at a ‘Product Manager of Paytm Experience’. How tunnel vision syndrome is eroding the startup spirit.&lt;/em&gt;
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Recently, a startup valued at around half a billion dollars laid off 10 of its Product Managers, leaving them with another 30. Just last year, the same startup hired Product guys at 20–30% premium from the market at average CTCs well over ₹20L. Even more intriguing, some of these guys were techie turned MBAs with less than four years’ experience. Having always been on the sales side of things, where one had to justify a minimum of 4x one’s salary to the company, I was fascinated by this lot. &lt;strong&gt;What did they do that was worth that much money?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One product guy I spoke to said he managed Paytm experience; which meant he had to ensure there were no drop-offs when the user chose to pay through Paytm. He also said he was mandated to prioritise payment through Paytm. And there were similar folks for each of the other alternate payment processes. “But, is Paytm the most competitive payment solution?”, I asked. He didn’t care, really. &lt;strong&gt;All that mattered was ‘mukesh23’ got through paying on the platform &lt;/strong&gt;without, gods forbid, choosing to click on the refresh button. Even better if he came through one of the exclusive Paytm promotions that he had brokered with his counterpart from the other side.&lt;/p&gt;

&lt;p&gt;Evidently, the metric for success — # completed transactions, is not entirely off-base. A good product guy could save the company millions, potentially. But, on closer observation it seems as though&lt;strong&gt; his chutzpah might also cost the company millions&lt;/strong&gt;, if not more. In the above case, there are several problems with how the roles are structured. What if Paytm wasn’t the best payment option on the platform? What if (plain conjecture, here) it were costlier, for instance? What if these users exited the native platform at rates higher than average?&lt;/p&gt;

&lt;p&gt;Let’s leave those seemingly troubling questions aside for a moment. What does one do to improve a third party payment experience? &lt;strong&gt;Mainly, vary size and placement of the button,&lt;/strong&gt; apparently. Turns out, there isn’t much you can do. But, that doesn’t mean you can’t do nothing. So, if you notice a needless “improvement” in your experience, know that some Product Manager’s review is forthcoming. Then, is it a surprise, really, that when things take a turn for the worse, these lot are first in the line of fire? I was surprised, though, to understand that a lot of them were entirely at peace with the transitional nature of their employment. 30% elsewhere, then.&lt;/p&gt;

&lt;p&gt;This is not restricted to Product folks alone, although it does seem like in recent years it has become a “get rich scheme” of sorts for some techies with an &lt;strong&gt;acute propensity to bullshit &lt;/strong&gt;their way through things. I see Marketing Managers who can’t / won’t write a line of copy or tweak keywords on their website. I see Designers who can’t / won’t code simple HTML or work on user personas and flow maps. I see Engineers who can’t / won’t test their code or learn how to write coherent software requirement specifications. This is manifestly due to the over-specialisation of roles and warped organisation structures in these startups. Ergo, the bleeding disinterest.&lt;/p&gt;

&lt;p&gt;It wasn’t always like this. It used to be that &lt;strong&gt;startups hired people to do just about everything, all at once.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fresh out of college, I was hired as a ‘Management Trainee’, which I came to realise was code for &lt;em&gt;will do &lt;/em&gt;&lt;strong&gt;&lt;em&gt;whatever the hell it takes to move the needle. &lt;/em&gt;&lt;/strong&gt;In the first year alone I did Sales, Product, Operations, and Marketing. I wasn’t alone; it seemed like everybody did everything. I remember our VP-Technology managing client delivery for a new initiative, and doing a damn good job at that. I remember our Operations Manager writing bizarre VBA Macros for Excel that saved hours of effort. And it seemed everybody everywhere else, too, were running an arm and a leg short of the work that was on their plates. It was synonymous with startups.&lt;/p&gt;

&lt;p&gt;It made tremendous business sense, too. &lt;strong&gt;First&lt;/strong&gt;, it was easier to find (and afford) people at the median levels of overlapping skill sets than at the top 1% of their specialisations. &lt;strong&gt;Second,&lt;/strong&gt; people always had a macro view of the company’s goals and everybody, more or less, aligned their personal work accordingly. &lt;strong&gt;Third, &lt;/strong&gt;it had unexpected, yet, massive pay-offs for our chosen specialisations: techies wrote better code because they understood business and sales guys were more effective because they knew the real implications of that code. It wasn’t easy, but those years probably had &lt;strong&gt;the greatest impact in my life.&lt;/strong&gt; It schooled my thoughts and perspectives.&lt;/p&gt;

&lt;p&gt;When people ask me what changed over the years, I give them the following analogy: a startup, back in the day, was &lt;strong&gt;like a goth band. &lt;/strong&gt;It attracted the misfits, the weirdos, and those of us who just happened to stumble into the mosh pit. There was a ton of work to do and very little real money to be made. You belonged to somewhat of a cult and expected unreasonable things of yourself and your brethren. What we lacked in resources we made up for with ingenuity and perseverance. Over the years, however, the goth band got a makeover. We couldn’t have been more thrilled at that time. It seemed like the World was finally giving us our due. We didn’t have to explain to mothers, uncles and landlords, what we did for a living. &lt;strong&gt;We could finally afford EMIs.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But, gradually, &lt;strong&gt;the goth kids turned cool.&lt;/strong&gt; The makeup, now, seemed superficial and the cult constantly disowned its own — for how much wisdom can be gained from tweaking button sizes over years? The law of diminishing marginal returns applied: increasing number of new members to the cult caused the marginal product of others to be smaller than the marginal product of the previous members at this point. And that’s how we got &lt;em&gt;‘Product Manager of Paytm Experience’.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But, what of the goth kids? They do lurk around. You won’t find them in conferences or hackathons or by the vending machines mooching off’ the free stuff. They’re likely in an intimate corner, head immersed in the laptop, being productive and maybe checking on Twitter once a while. If you’re ever in the position of hiring for your startup, my suggestion is for you to find and hire the goth kid. He’ll remind you why you started up in the first place. And also, he won’t ask you about your company’s pet policy.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;This article was originally published  on &lt;a href=&quot;https://medium.com/@carygottheblues/to-the-goth-kids-632d8ae50df2&quot;&gt;Medium&lt;/a&gt;. We are republishing it here with the permission of the author&lt;/p&gt;

&lt;/blockquote&gt;


  
  &lt;p&gt;&lt;a href=&quot;/career/to-the-goth-kids/&quot;&gt;To the Goth Kids&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on July 28, 2017.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Setting up OAuth2 callbacks in Rails with HTTPS offloading on load balancers]]></title>
  <link rel="alternate" type="text/html" href="/technology/setting-up-elb-plus-nginx-with-https-offloading/"/>
  <id>/technology/setting-up-elb-plus-nginx-with-https-offloading</id>
  <updated>2017-03-08 09:47:23 +0530T00:00:00-00:00</updated>
  <published>2017-03-08T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#ELB" term="ELB" /><category scheme="/tags/#NGINX" term="NGINX" /><category scheme="/tags/#https%20offloading" term="https offloading" /><category scheme="/tags/#OAuth" term="OAuth" /><category scheme="/tags/#Rails" term="Rails" />
  <content type="html">
  
    &lt;p&gt;“HTTPS everywhere” is not a luxury anymore. It is a necessity. Thankfully, obtaining an SSL certificate has become easier too, with initiatives such as &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;, &lt;a href=&quot;https://www.geotrust.com/ssl/free-ssl-certificate/&quot;&gt;GeoTrust&lt;/a&gt;, &lt;a href=&quot;https://www.positivessl.com/&quot;&gt;Positive SSL&lt;/a&gt;, &lt;a href=&quot;https://www.startssl.com/&quot;&gt;StartSSL&lt;/a&gt;. Even cloud based services such as &lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;Cloudflare&lt;/a&gt; and &lt;a href=&quot;https://aws.amazon.com/&quot;&gt;Amazon AWS&lt;/a&gt; provide free SSL certificates to their customers.&lt;/p&gt;

&lt;p&gt;####&lt;strong&gt;Here is setting some context to help the reader appreciate the discussion&lt;/strong&gt;:
We host our rails applications on &lt;a href=&quot;https://aws.amazon.com/&quot;&gt;Amazon AWS&lt;/a&gt;. We generally use three different environments - development, staging and production. Development environment is generally local to a developer while staging and production are hosted on the cloud. There is a minor difference in the way we configure our staging and production environments. Our staging environment typically contains a single machine instance hosting our application. This single instance is exposed to internet directly (has a public IP). On the other hand, our production environment typically contains a cluster of instances for the sake of horizontal scaling. These instances typically do not have a public IP and hence not exposed to internet directly. We put this cluster behind an internet-facing &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/&quot;&gt;Elastic Load Balancer (ELB)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We use &lt;a href=&quot;https://docs.chef.io/chef_solo.html&quot;&gt;chef-solo&lt;/a&gt; to manage our cloud infrastructure as well as to deploy code to various environments.&lt;/p&gt;

&lt;p&gt;#####&lt;strong&gt;The Problem Statement:&lt;/strong&gt;
For the sake of this discussion, we shall limit ourselves to configuring SSL certificates obtained from the two free providers, namely &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt; and &lt;a href=&quot;https://aws.amazon.com/&quot;&gt;Amazon AWS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt; in a clustered setup is tricky, since you need to make one of the instances stateful, in the sense, one instance needs to be given the responsibility of obtaining and renewing SSL certificate from &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;. All other instances need to copy this certificate every time its renewed. This requirement unnecessarily complicates the setup and also takes away some amount of flexibility. Also, &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt; does not issue wildcard certificates and the validity of a certificate is just 90 days&lt;/p&gt;

&lt;p&gt;The certificates provisioned from the other provider, &lt;a href=&quot;https://aws.amazon.com/&quot;&gt;Amazon AWS&lt;/a&gt;, can only be installed on an &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/&quot;&gt;ELB&lt;/a&gt;. Hence is best suited for our clustered setup, namely production. An added advantage is that Amazon can issue wildcard certificates. We could always add an &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/&quot;&gt;ELB&lt;/a&gt; to our staging environment (even though we will never have more than one instance), but that costs extra money for no reason.&lt;/p&gt;

&lt;p&gt;This leaves us with these options&lt;/p&gt;

&lt;table class=&quot;custom_table&quot;&gt;
  &lt;tr&gt;
    &lt;th class=&quot;custom-t&quot;&gt;Environment&lt;/th&gt;
    &lt;th class=&quot;custom-t&quot;&gt;Best Option&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&quot;custom-t&quot;&gt;Staging&lt;/td&gt;
    &lt;td class=&quot;custom-t&quot;&gt;Let's Encrypt&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&quot;custom-t&quot;&gt;Production&lt;/td&gt;
    &lt;td class=&quot;custom-t&quot;&gt;Amazon AWS&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br /&gt;
We went ahead with this choice. Using &lt;a href=&quot;https://docs.chef.io/chef_solo.html&quot;&gt;chef&lt;/a&gt; to manage our setup came handy.&lt;/p&gt;

&lt;p&gt;We first configured our Staging environment and everything worked as expected.&lt;/p&gt;

&lt;p&gt;However, the same application, in production environment, started throwing &lt;code&gt;CSRF detected&lt;/code&gt; Error whenever an &lt;a href=&quot;https://oauth.net/2/&quot;&gt;OAuth2&lt;/a&gt; callback happened. This was really strange. Our application integrated with two different OAuth providers, and the problem was consistent with both these providers.&lt;/p&gt;

&lt;p&gt;#####&lt;strong&gt;What’s the issue?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The only difference between our Staging and Production setups was the &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/&quot;&gt;ELB&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In production, we offloaded HTTPS at the &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/&quot;&gt;ELB&lt;/a&gt;. Plain HTTP request would hit the &lt;a href=&quot;https://www.nginx.com/resources/wiki/&quot;&gt;NGINX&lt;/a&gt; web server, which in turn would reverse-proxy it to unicorn and rails.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CSRF detected&lt;/code&gt; was clearly an error emitting from the rails application. Not from &lt;a href=&quot;https://www.nginx.com/resources/wiki/&quot;&gt;NGINX&lt;/a&gt;, and not from the &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/&quot;&gt;ELB&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A closer look would reveal that the rails application had no way to know if the callback was made on a http:// URL or a https:// URL, because it sees only HTTP (due to offloading).  Was this the reason rails was unhappy?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://oauth.net/2/&quot;&gt;OAuth2&lt;/a&gt;, by design, does not accept plain HTTP callbacks (unless it is to localhost).&lt;/p&gt;

&lt;p&gt;####&lt;strong&gt;How do we move forward?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;#####&lt;strong&gt;PoC to prove the theory&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Just to confirm what we think is the cause, we &lt;b&gt;enabled HTTPS&lt;/b&gt; on &lt;a href=&quot;https://www.nginx.com/resources/wiki/&quot;&gt;NGINX&lt;/a&gt; (like we did in our staging environment). This was in addition to HTTPS on the Load balancer. We reconfigured the Load Balancer to NOT offload HTTPS but forward the request as-is to &lt;a href=&quot;https://www.nginx.com/resources/wiki/&quot;&gt;NGINX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What do we have now? The &lt;code&gt;CSRF detected&lt;/code&gt; errors are gone. Application behaves just like it should.&lt;/p&gt;

&lt;p&gt;This confirmed our theory.&lt;/p&gt;

&lt;p&gt;But the question now is, how do we achieve our desired configuration of offloading HTTPS at the &lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/&quot;&gt;ELB&lt;/a&gt; ? Is it just not possible ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have been using &lt;b&gt;X-Forwarded-For&lt;/b&gt; header while reverse proxying to unicorn so that our rails application knows the client IP address (rather than the IP address of the Load Balancer). We need this for logging and tracking.&lt;/p&gt;

&lt;p&gt;Could there be something on similar lines to tell the rails application that the request was not on HTTP but on HTTPS?&lt;/p&gt;

&lt;p&gt;Sure there is. We had to set a header in our reverse proxy configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X-Forwarded-Proto  to  https
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For &lt;a href=&quot;https://www.nginx.com/resources/wiki/&quot;&gt;NGINX&lt;/a&gt;, we do it like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Voila, Rails is happy and things are back to normal!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;Details:&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Csrf detected!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rails bothers about SSL only at two places, 
&lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;At environment config, force_ssl.
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;At external included Gem like &lt;a href=&quot;https://github.com/omniauth/omniauth&quot;&gt;Omniauth&lt;/a&gt;. 
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In &lt;strong&gt;&lt;em&gt;Rails environment config&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;force_ssl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This does the trick, but doesn’t seem like a good idea to enable this option in Rails because, we offload https at &lt;a href=&quot;https://www.nginx.com/resources/wiki/&quot;&gt;NGINX&lt;/a&gt;. For Rails, request came in http, so it does a permanent redirect to https, which ends in a infinite loop.&lt;/p&gt;

&lt;p&gt;Our stack trace gave a clue that error might be inside &lt;q&gt;&lt;strong&gt;&lt;em&gt;omniauth&lt;/em&gt;&lt;/strong&gt;&lt;/q&gt; gem.&lt;/p&gt;

&lt;div class=&quot;back-trace-div&quot;&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/abstract_controller/&lt;b&gt;base.rb&lt;/b&gt;:132 → process&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionview-4.2.7.1&lt;/b&gt;/lib/action_view/&lt;b&gt;rendering.rb&lt;/b&gt;:30 → process&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_controller/&lt;b&gt;metal.rb&lt;/b&gt;:196 → dispatch&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_controller/metal/&lt;b&gt;rack_delegation.rb&lt;/b&gt;:13 → dispatch&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_controller/&lt;b&gt;metal.rb&lt;/b&gt;:237 → block in action&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_dispatch/routing/&lt;b&gt;route_set.rb&lt;/b&gt;:74 → dispatch&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_dispatch/routing/&lt;b&gt;route_set.rb&lt;/b&gt;:43 → serve&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_dispatch/journey/&lt;b&gt;router.rb&lt;/b&gt;:43 → block in serve&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_dispatch/journey/&lt;b&gt;router.rb&lt;/b&gt;:30 → each&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_dispatch/journey/&lt;b&gt;router.rb&lt;/b&gt;:30 → serve&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;actionpack-4.2.7.1&lt;/b&gt;/lib/action_dispatch/routing/&lt;b&gt;route_set.rb&lt;/b&gt;:817 → call&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;omniauth-1.3.1/lib&lt;/b&gt;/omniauth/&lt;b&gt;strategy.rb&lt;/b&gt;:186 → call!&lt;/span&gt;&lt;br /&gt;
    &lt;span class=&quot;back-trace-row&quot;&gt;&lt;b&gt;omniauth-1.3.1/lib&lt;/b&gt;/omniauth/&lt;b&gt;strategy.rb&lt;/b&gt;:164 → call&lt;/span&gt;&lt;br /&gt;
&lt;/div&gt;

&lt;p&gt;As we dug inside the Gem and found out that &lt;a href=&quot;https://github.com/omniauth/omniauth&quot;&gt;Omniauth&lt;/a&gt; looks at these headers&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/intridea/omniauth/blob/ed1f9a8994e6b660e2eed3f85bb87c81229480fa/lib/omniauth/strategy.rb#L493-L499&quot; target=&quot;_blank&quot;&gt;lib/omniauth/strategy.rb#L493-L499&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ssl?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HTTPS&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;on&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HTTP_X_FORWARDED_SSL&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;on&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HTTP_X_FORWARDED_SCHEME&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HTTP_X_FORWARDED_PROTO&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HTTP_X_FORWARDED_PROTO&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rack.url_scheme&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is where we found that setting up &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Proto&quot;&gt;X_FORWARDED_PROTO&lt;/a&gt; to https should fix our problems.&lt;/p&gt;

&lt;p&gt;Initially, this &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Proto&quot;&gt;X_FORWARDED_PROTO&lt;/a&gt; was set to $scheme. Which will be http for production as https is offloaded at ELB.&lt;/p&gt;

&lt;p&gt;Now, by setting &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Proto&quot;&gt;X_FORWARDED_PROTO&lt;/a&gt; to https, we are making sure that redirects are happening on https.&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;/technology/setting-up-elb-plus-nginx-with-https-offloading/&quot;&gt;Setting up OAuth2 callbacks in Rails with HTTPS offloading on load balancers&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on March 08, 2017.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Custom Capacity Buffers In Go]]></title>
  <link rel="alternate" type="text/html" href="/technology/custom-capacity-buffers-in-go/"/>
  <id>/technology/custom-capacity-buffers-in-go</id>
  <updated>2015-03-31 11:58:04 +0530T00:00:00-00:00</updated>
  <published>2015-03-31T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#go" term="go" /><category scheme="/tags/#ruby" term="ruby" /><category scheme="/tags/#buffer" term="buffer" />
  <content type="html">
  
    &lt;p&gt;At elitmus we use ruby to create most of our tools and most of our applications  are also written in ruby. Recently I started exploring ways to build our tools especially the backend tools in languages other than ruby which have much lesser memory footprint and better efficiency. One such cases was to create a sandboxed environment for running  untrusted code on our servers. After evaluating multiple languages, I decided to use golang because of it’s excellent library support coupled with the fact the docker(a sandboxed env) was also written in go.&lt;/p&gt;

&lt;p&gt;One of the many challenges we faced while creating our sandbox was  redirection of the standard output of untrusted code, as this simple code below will fill up the disk if redirected to file or use all system resources if redirected to a buffer.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;am&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;green&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monster&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So the problem is,how to limit the size of a file or buffer?, I  started with   buffers  as they are more easy to implement.  I assumed that the &lt;code&gt;Write&lt;/code&gt; method of the &lt;code&gt;Buffer&lt;/code&gt; struct which writes to the buffer, will panic with &lt;code&gt;ErrTooLarge&lt;/code&gt; error if buffer size is above it’s capacity, which i hoped to catch using &lt;code&gt;recover&lt;/code&gt; builtin function.&lt;/p&gt;

&lt;p&gt;This is the code snippet below.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;recover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;         &lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Should catch if anyone panics&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;create boom&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;      &lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;       &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On running this code, my system was frozen and crashed a little later. This is not what i expected, On further investigation by looking to &lt;a href=&quot;http://golang.org/src/bytes/buffer.go?s=4155:4206#L115&quot;&gt;source code&lt;/a&gt; and reading the &lt;code&gt;bytes&lt;/code&gt; package documentation again, i found out that &lt;code&gt;Write&lt;/code&gt; method in the &lt;code&gt;bytes&lt;/code&gt; package is growing the capacity of the  buffer if the buffer capacity is not enough, which in turn is increasing the amount of memory and resources used by the system.&lt;/p&gt;

&lt;p&gt;After some googling and with good help from the go community(thanks to &lt;a href=&quot;https://github.com/davecheney&quot;&gt;dave cheney&lt;/a&gt;), i decided  to create wrapper around the buffer struct and implement my own &lt;code&gt;io.Writer&lt;/code&gt; interface by implementing Write method for the wrapper which writes to the buffer.&lt;/p&gt;

&lt;p&gt;My custom wrapper’s will take capacity as parameter when initializing and the &lt;code&gt;Write&lt;/code&gt; method will do the required action if there is a buffer overflow, instead of increasing the capacity like the &lt;code&gt;Write&lt;/code&gt; method from &lt;code&gt;bytes&lt;/code&gt; package. This is done by monitoring the size of the buffer before writing to the buffer.&lt;/p&gt;

&lt;p&gt;This is code snippet of my custom wrapper.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyBuffer&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;cap&lt;/span&gt;   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;mybuf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Buffer&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mybuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mybuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Buffer Overflow&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mybuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NewBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cap&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyBuffer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mybuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;recover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;            &lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;recover in yes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NewBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Check for Buffer Overflow&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32 &lt;/span&gt;            &lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33 &lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On running this code, it worked as expected, hopefully will be deployed in production.
The same goes for files as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; useful links, &lt;a href=&quot;https://www.docker.com/&quot;&gt;on docker&lt;/a&gt;,&lt;a href=&quot;http://golang.org/pkg/bytes/&quot;&gt;on golang bytes package&lt;/a&gt;&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;/technology/custom-capacity-buffers-in-go/&quot;&gt;Custom Capacity Buffers In Go&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on March 31, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Making Airtel 3G dongle work on Mac OS 10.10 Yosemite]]></title>
  <link rel="alternate" type="text/html" href="/technology/making-airtel-3g-dongle-work-on-mac-os-10-dot-10-yosemite/"/>
  <id>/technology/making-airtel-3g-dongle-work-on-mac-os-10-dot-10-yosemite</id>
  <updated>2014-12-03 09:29:33 +0530T00:00:00-00:00</updated>
  <published>2014-12-03T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#3G%20Dongle" term="3G Dongle" /><category scheme="/tags/#Yosemite" term="Yosemite" /><category scheme="/tags/#Airtel" term="Airtel" />
  <content type="html">
  
    &lt;p&gt;If you use Airtel 3G Dongle (Mine is Huawei E173) on your Mac, and are having issue using the dongel after upgrading to Yosemite, airtel is of little help. They asked me to downgrade the OS to Mavericks!&lt;/p&gt;

&lt;p&gt;The reason why the dialer software provided by airtel does not work is, that they internally use Apple USB Modem. According to &lt;a href=&quot;http://support.apple.com/en-in/HT201833&quot;&gt;this FAQ on apple support site&lt;/a&gt;, your Operating system should be running in &lt;code&gt;32 bit mode&lt;/code&gt; for the modem to work. Yosemite however, is &lt;code&gt;64 bit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Anyway, I could find multiple ways to overcome the problem. Here I am writing about the most simple one&lt;/p&gt;

&lt;p&gt;###Step 1: 
Click on this link to download the new compitable driver from Huawei website &lt;a href=&quot;http://consumer.huawei.com/en/support/downloads/detail/index.htm?id=31322&quot;&gt;&lt;code&gt;Mac-V200R003B015D11SP00C983(for Mac10.10).rar&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/airtel3g-yosemite/1-huawei-website.png&quot; alt=&quot;Huawei Website Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;###Step 2: 
Open the archive, you will find two files&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. Mobile Partner install user guide.docx
2. Mobile Partner.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The word document has detailed instructions with screenshots, on how to install.&lt;/p&gt;

&lt;p&gt;###Step 3: 
Open the zip file &lt;code&gt;Mobile Partner.zip&lt;/code&gt;, you will find &lt;code&gt;Mobile Partner.app&lt;/code&gt;. Double click on this file to install the app&lt;/p&gt;

&lt;p&gt;###Step 4: 
Once installed, start the app and go to Tools -&amp;gt; Options&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/airtel3g-yosemite/2-options-menu.png&quot; alt=&quot;Tools -&amp;gt; Options Menu&quot; /&gt;&lt;/p&gt;

&lt;p&gt;###Step 5: 
In the Options window, choose “Profile Management” from the left side menu&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/airtel3g-yosemite/3-options-profile-management.png&quot; alt=&quot;Profile Management&quot; /&gt;&lt;/p&gt;

&lt;p&gt;###Step 6: 
Click on “New” button to create a new profile. Give it a name, such as “airtel 3g”. Also, make sure the “Access Number” is set to &lt;code&gt;*99#&lt;/code&gt;. Click “Save”, then “Ok”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/airtel3g-yosemite/4-new-profile-and-access-number.png&quot; alt=&quot;Configuring a new profile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;###Step 7: 
Insert your Dongel into an USB port. You should see “Mobile Partner” application starting automatically. Choose the profile you created in Step 6 (“airtel 3g”) and “Connect”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/airtel3g-yosemite/5-dialer-screen.png&quot; alt=&quot;The Dialer Screen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s it.&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;/technology/making-airtel-3g-dongle-work-on-mac-os-10-dot-10-yosemite/&quot;&gt;Making Airtel 3G dongle work on Mac OS 10.10 Yosemite&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on December 03, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[IT Career - Pitfalls to avoid]]></title>
  <link rel="alternate" type="text/html" href="/career/it-career-pitfalls-to-avoid/"/>
  <id>/career/it-career-pitfalls-to-avoid</id>
  <updated>2014-09-22 17:01:53 +0530T00:00:00-00:00</updated>
  <published>2014-09-22T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#pyramid%20effect" term="pyramid effect" /><category scheme="/tags/#Indian%20IT%20industry" term="Indian IT industry" /><category scheme="/tags/#Freshers" term="Freshers" />
  <content type="html">
  
    &lt;p&gt;It is very humbling when a youngster walks up to us and says “Thanks for helping me get my first job”. While we are delighted at one end, we are worried at the other.  Why? Because, most of the time a fledgling mind does not see the disaster ahead! &lt;br /&gt;&lt;br /&gt;Yes, we mean disaster – 75% of IT professionals of 2011-2014 batches will be unemployed 20 years from now.  And this is assuming IT industry does well !! Looks unlikely? Read on to know more.&lt;/p&gt;

&lt;p&gt;Indian IT industry has employed around 7,50,000 professionals from the four batches (2011, 2012, 2013, 2014). An estimated 1,50,000 of these will leave the Indian IT industry to pursue higher studies and never come back to work for the same industry. That leaves us with 6,00,000 professionals who will be in the industry for long. The question is: How long? Being highly paid with around 20 years of experience, in the year 2030, companies would want them to take larger responsibilities and oversee at least 100 professionals under them. Summing it up, these 6 lakh professionals should have 6 crore professionals below them. Assuming IT industry grows at 10% per annum for 20 years (caution - it may already be slowing down), the whole industry will be just 1.2 crore strong. That means at most 1.2 lakh senior professionals will be needed. What would happen to the rest 4.8 lakh professionals? They would, of course, be unemployed.&lt;/p&gt;

&lt;p&gt;Difficult to digest? In 1995, there were approximately 11,000 software professionals across all levels. Nearly 50% of them are now citizens of another country or earned enough money from the exponentially growing market (nascent market then) growing market to retire, appropriately called VIP (vested in peace). Another at most 15,500 professionals of the same era migrated into IT industry from other industries (like SAP consultants, Supply Chain, Financial professionals). So that is a conservative 21,000 senior professionals in the whole of Indian IT industry. Many of these who lose a job today struggle to find another suitable profile (20 Yrs of experience) and this is when growth rates in this period have been over 25%. You can see it happening for the current 40+ year old professionals!!&lt;/p&gt;

&lt;p&gt;Now you have a lingering doubt – could there be something wrong in the projections? Yes !! But it is unfortunately on the negative side. What if the industry grows slower than 10% (may be another bad patch of no growth for 2-4 years). What if automation makes many more jobs redundant (now in IT itself, think about it!)? Last but not the least, another country taking away jobs from India (like China did in manufacturing)?&lt;/p&gt;

&lt;p&gt;A tell-a-tale from not very long ago is the textile mills of Bombay. They were teeming with activity and nothing could go wrong for them in 1970s and early 1980s. It could only get better as population was growing and people’s ability to spend was increasing. These very mills today are malls!! It can be argued to be a ‘crowding out’ phenomenon, surely not applicable to sunrise IT industry. Or maybe it is visible only in hindsight !!!&lt;/p&gt;

&lt;h4 id=&quot;what-are-we-doing-at-elitmus-to-help-the-cause&quot;&gt;&lt;strong&gt;What are we doing at eLitmus to help the cause?&lt;/strong&gt;&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;We are pushing companies not to lower the entry barriers. We have found that immediately after a slow down year, quality and quantity of candidates improve. Quantity ok, but how quality? You call it competition, you call it lowered demand or call it buyers market. So if companies can adopt the quality principals in this period, why not in growth phase as well. It will help students also.
We strongly believe a youngster`s ability to adapt and evolve is much higher than an older person. So push them today rather than tomorrow. If you remember your grandparents had the fitness and ability to walk kilometres at their old age (not spoilt by automobiles when they were a child)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Educating students that the easy path out, though rosy for short term, will destroy them. We want them to go that extra mile. That explains our rigorous question paper which tests fundamentals and concepts. We want them to earn their job rather than get it. In the process their ability goes up. Few students who wrote pH test in the initial years of eLitmus have founded their own start-ups.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ensuring start-ups and companies with great work environment do not struggle for lack of talent. Most of these engagements are loss making. We survive thanks to the fact that most of our colleagues at eLitmus are passionate about what they do and work at a fraction of their market salary!!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We are committed to “making India competitive” and we hope we have challenged the young reader of this blog to go the extra mile. As Steve Jobs once quoted the Whole Earth catalogue “Stay hungry, Stay foolish!”&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;/career/it-career-pitfalls-to-avoid/&quot;&gt;IT Career - Pitfalls to avoid&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on September 22, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[How we host our blog on GitHub pages and yet serve it from our own Sub-URL]]></title>
  <link rel="alternate" type="text/html" href="/technology/how-we-host-our-blog-on-github-pages-and-yet-serve-it-from-our-own-sub-url/"/>
  <id>/technology/how-we-host-our-blog-on-github-pages-and-yet-serve-it-from-our-own-sub-url</id>
  <updated>2014-08-18 12:26:44 +0530T00:00:00-00:00</updated>
  <published>2014-08-18T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#Github" term="Github" /><category scheme="/tags/#nginx" term="nginx" /><category scheme="/tags/#reverse%20proxy" term="reverse proxy" />
  <content type="html">
  
    &lt;p&gt;There are umpteen number of blog posts telling you how to host your static site on GitHub Pages for free. They also tell you how to serve such a site from your own domain name.&lt;/p&gt;

&lt;p&gt;As you may have guessed, this blog is also hosted on GH Pages. Don’t believe me? try visiting this URL &lt;code&gt;https://shireeshj.github.io/blog/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is easy to map a &lt;code&gt;github.io&lt;/code&gt; url such as this, to a subdomain. For example, it is easy to map the url to &lt;code&gt;https://blog.elitmus.com/blog/&lt;/code&gt;.  All you need to do is check-in a file named CNAME into the root folder of your git repo that contains your static site.&lt;/p&gt;

&lt;p&gt;What if you want your static site to be served from domain apex? That is easy too.  &lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages&quot;&gt;GitHub pages help&lt;/a&gt; explains this in a simple manner.&lt;/p&gt;

&lt;p&gt;However, If your domain apex is already taken, say by your other website, you have a problem.  To host your static site on a domain apex (or a sub-url of domain apex) the domain apex should be available exclusively for use by github pages.&lt;/p&gt;

&lt;p&gt;We had to overcome this very problem, since our business website is already hosted on &lt;code&gt;elitmus.com&lt;/code&gt; (and &lt;code&gt;www.elitmus.com&lt;/code&gt;).  Given that we are not in great love with subdomains. We had to find a workaround. And here is what we did:&lt;/p&gt;

&lt;p&gt;Since we use nginx to server our business website, all we had to do was to write a simple traffic-cop rule. What this rule did was, to parse the request url to see if it starts with &lt;code&gt;/blog/&lt;/code&gt;. If yes, then the request is reverse proxied to GitHub Pages. If no, then it is served from local disk.&lt;/p&gt;

&lt;p&gt;The relevant lines from the config file are here&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	location /blog/ {
	    proxy_pass       http://shireeshj.github.io/;
	    proxy_redirect off;
	    proxy_set_header Host &amp;lt;shireeshj.github.io&amp;gt;;
	    proxy_set_header X-Host &amp;lt;shireeshj.github.io&amp;gt;;;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is how we get free hosting for our blog, yet serve it from our official URL. If GitHub pages ever stops us from reverse proxying, we shall simply spin our own webserver to run this static site and reverse proxy to that web server.&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;/technology/how-we-host-our-blog-on-github-pages-and-yet-serve-it-from-our-own-sub-url/&quot;&gt;How we host our blog on GitHub pages and yet serve it from our own Sub-URL&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on August 18, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Using Monit to get email alert on unauthorized login]]></title>
  <link rel="alternate" type="text/html" href="/technology/using-monit-to-get-email-alert-on-unauthorized-login/"/>
  <id>/technology/using-monit-to-get-email-alert-on-unauthorized-login</id>
  <updated>2014-06-04 09:57:11 +0530T00:00:00-00:00</updated>
  <published>2014-06-04T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#ssh" term="ssh" /><category scheme="/tags/#monit" term="monit" /><category scheme="/tags/#alert" term="alert" />
  <content type="html">
  
    &lt;p&gt;For a long time, we had our own custom written perl script to alert us whenever someone logged into our production servers from an ip address we do not recognize (not whitelisted). The script looked somewhat like this…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;#!/usr/bin/perl&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# script file: alert_on_login.pl&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$login_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Accepted publickey&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$whitelist_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;122.123.123.111&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;sub &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sendEmail&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sendmail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;/usr/lib/sendmail&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;|$sendmail -oi -t&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAIL&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;From: $from\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAIL&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;To: $to\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAIL&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Subject: $subject\n\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAIL&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;$message\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/$login_str/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/$whitelist_ip/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;@arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;sendEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;recepient1@elitmus.com, recepient2@elitmus.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;&amp;#39;monit@elitmus.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;&amp;#39;Server login from &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                          &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All we needed to do was to run this script in the background as a daemon, and it would send us an email alert whenever someone logged in successfully. As root user start the script like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  # (perl alert_on_login.pl /var/log/auth.log &amp;amp;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ever since we started using &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;monit&lt;/a&gt; for the usual purpose (monitoring processes), we have also entrusted &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;monit&lt;/a&gt; to do the job of the above perl script. &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;Monit&lt;/a&gt; makes this super simple…&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;Monit&lt;/a&gt; is a popular opensource process monitoring tool. It is used mostly for monitoring health of any linux process and take necessary action if any of the set parameters are breached. Monit can restart a process if the process failed for some reason. Monit can also notify you of incidents and actions taken.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mmonit.com/monit/documentation/monit.html#alert_messages&quot;&gt;See this&lt;/a&gt; to learn more about &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;monit’s&lt;/a&gt; alert capabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;Monit’s&lt;/a&gt; global configuration file is usually /etc/monit/monitrc. Here is what &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;monit&lt;/a&gt; needs to be told about how to send email alerts:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;...
&lt;span class=&quot;c1&quot;&gt;# This is our SMTP server settings. The complete syntax is&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# SET MAILSERVER &amp;lt;hostname [PORT] [USERNAME] [PASSWORD] [using SSLAUTO|SSLV2|SSLV3|TLSV11|TLSV12] [CERTMD5 checksum]&amp;gt;, ...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#          [with TIMEOUT X SECONDS]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#          [using HOSTNAME hostname]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# But for our purpose, localhost is good enough&lt;/span&gt;
SET mailserver localhost

&lt;span class=&quot;c1&quot;&gt;# This is the email template for alert messages&lt;/span&gt;
SET mail-format &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  from: monit@elitmus.com
  subject: &lt;span class=&quot;nv&quot;&gt;$SERVICE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$EVENT&lt;/span&gt; at &lt;span class=&quot;nv&quot;&gt;$DATE&lt;/span&gt;
  message: Monit &lt;span class=&quot;nv&quot;&gt;$ACTION&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$SERVICE&lt;/span&gt; at &lt;span class=&quot;nv&quot;&gt;$DATE&lt;/span&gt; on &lt;span class=&quot;nv&quot;&gt;$HOST&lt;/span&gt;: &lt;span class=&quot;nv&quot;&gt;$DESCRIPTION&lt;/span&gt;.
           Yours sincerely,
           monit
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Alerts can be triggered for various reasons. Successful ssh login is just one of those reasons.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Since this is a global configuration, we can tell monit to not send alerts for certain events&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#  We also specify the email address of the recepient who will receive the alerts&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; alert recepient1@elitmus.com NOT ON &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; action, instance, pid, ppid, nonexist &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then we add this config file &lt;code&gt;ssh_logins.conf&lt;/code&gt; specific to sshd related stuff:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;check file ssh_logins with path /var/log/auth.log
  ignore match &lt;span class=&quot;s2&quot;&gt;&amp;quot;/etc/monit/whitelist_ips.regex&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; match &lt;span class=&quot;s2&quot;&gt;&amp;quot;Accepted publickey&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; alert&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice how we tell &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;monit&lt;/a&gt; to ignore logins from known ip addresses. We can now store all whitelist ip addresses in a separate file &lt;code&gt;/etc/monit/whitelist_ips.regex&lt;/code&gt;, one address per line.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We have disabled password based login and hence do not monitor for passworded logins. If you use passworded login, you should change &lt;code&gt;&quot;Accepted publickey&quot;&lt;/code&gt; to &lt;code&gt;&quot;Accepted password&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Happy monitoring!&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;/technology/using-monit-to-get-email-alert-on-unauthorized-login/&quot;&gt;Using Monit to get email alert on unauthorized login&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on June 04, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Gotcha's while syntactically translating AES encryption logic from PHP to Ruby]]></title>
  <link rel="alternate" type="text/html" href="/technology/gotchas-while-syntactically-translating-aes-encryption-logic-from-php-to-ruby/"/>
  <id>/technology/gotchas-while-syntactically-translating-aes-encryption-logic-from-php-to-ruby</id>
  <updated>2014-05-25 20:39:45 +0530T00:00:00-00:00</updated>
  <published>2014-05-25T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#ruby" term="ruby" /><category scheme="/tags/#PHP" term="PHP" /><category scheme="/tags/#AES" term="AES" /><category scheme="/tags/#Cryptography" term="Cryptography" /><category scheme="/tags/#Encryption" term="Encryption" /><category scheme="/tags/#Decryption" term="Decryption" />
  <content type="html">
  
    &lt;p&gt;Our Payment Gateway service provider recently launched a new platform with some nice-to-have features. We wanted those features and so we decided to migrate. Being one of the earliest adopters of the new platform, there was no integration kit available. We had to build it ourselves. Not a problem. Since we are a Ruby On Rails shop, we built our own Ruby integration kit. All went well and we pushed it to production.&lt;/p&gt;

&lt;p&gt;A month or two later, we got an email from our gateway provider seeking our help with writing the &lt;code&gt;encryption&lt;/code&gt; and &lt;code&gt;decryption&lt;/code&gt; logic for the Ruby integration kit they were developing. We were a little surprised, because we noticed they had already published integration kits for PHP, Python, JAVA etc. How difficult can it be to translate that to Ruby?&lt;/p&gt;

&lt;p&gt;Turns out, syntactic transalation of code from one programming language to another does not always work. A slightly more deeper knowledge helps. We could almost guess where they were getting stuck.&lt;/p&gt;

&lt;p&gt;Before we get to the story, some backgroung on the encryption algo will add clarity.&lt;/p&gt;

&lt;p&gt;For secure communication between our server and the gateway, the prescribed cipher was AES, specifically symmetric-key block cipher with a 128 bit secret key in CBC mode. Since OpenSSL already implements this algo and is avaliable on almost all platforms, most programming languages just bundle a wrapper for OpenSSL.&lt;/p&gt;

&lt;p&gt;So if its the same OpenSSL that the wrappers call, why couldn’t the gateway service provider translate their own PHP code to Ruby?&lt;/p&gt;

&lt;h3 id=&quot;here-is-why&quot;&gt;Here is why:&lt;/h3&gt;

&lt;p&gt;AES works by breaking the plain text (the text to be encrypted) into blocks of 128 bits (or 16 bytes). In CBC mode, each block is XORed with the key to get cipher text of that block. The cipher text of the previous block is used for encrypting the next block… so on and so forth, until all the blocks are encrypted.&lt;/p&gt;

&lt;p&gt;Note that the length of the cipher text will be exactly same as that of the plain text.&lt;/p&gt;

&lt;p&gt;The problem occures with the last block. If the length of the plain text is not a multiple of 128. the last block will be shorter than 128 bits. Since the algo can work only on blocks of 128 bits, It is a common practice to pad the last block so that it becomes equal to 128 bits in lenght. This padding is subsequently discarded after decryption.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The actual algo is more complicated than this. We have deliberately left out details that are not relevent for this post.&lt;/p&gt;

&lt;p&gt;This is the encryption method in the PHP integration kit published by the gateway service provider&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;function encrypt($plainText,$key)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  $secretKey = hextobin(md5($key));&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  $initVector = &amp;quot;...&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  $openMode = mcrypt_module_open(MCRYPT_RIJNDAEL_128, &amp;#39;&amp;#39;,&amp;#39;cbc&amp;#39;, &amp;#39;&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  $blockSize = mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, &amp;#39;cbc&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  $plainPad = pkcs5_pad($plainText, $blockSize);  //  &amp;lt;---- Padding&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  if (mcrypt_generic_init($openMode, $secretKey, $initVector) != -1) &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  {&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    $encryptedText = mcrypt_generic($openMode, $plainPad);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    mcrypt_generic_deinit($openMode);      &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  } &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  return bin2hex($encryptedText);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;// Padding method&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;function pkcs5_pad ($plainText, $blockSize)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  // padding logic here&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is the same implemented in Ruby&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plain_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;secret_key&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Digest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MD5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3 &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:CBC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4 &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5 &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_key&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6 &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INIT_VECTOR&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7 &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;encrypted_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plain_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;final&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypted_text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;H*&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;9 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice any difference?&lt;/p&gt;

&lt;p&gt;It turns out that, unlike in Python, PHP and few other languages, Ruby wrapper for OpenSSL automatically takes care of padding (default behaviour). This is clearly mentioned in the &lt;a href=&quot;http://ruby-doc.org/stdlib-2.0/libdoc/openssl/rdoc/OpenSSL/Cipher.html#method-i-final&quot;&gt;documentation&lt;/a&gt;. For some reason, techies at our gateway service provider overlooked this and hit a dead-end.&lt;/p&gt;

&lt;p&gt;By the they, they were gracious enough to acknowledge our contribution in their Ruby Integration Kit (accessible only to their subscribers)&lt;/p&gt;

&lt;p&gt;But We have open sourced our code here ‘&lt;a href=&quot;https://github.com/elitmus/cca_crypto&quot;&gt;cca_crypto&lt;/a&gt;’. We have plans of make this into a complete package - with view generators etc., and publish this as a rubygem. We shall gladly accept any pull request!&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;/technology/gotchas-while-syntactically-translating-aes-encryption-logic-from-php-to-ruby/&quot;&gt;Gotcha's while syntactically translating AES encryption logic from PHP to Ruby&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on May 25, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Setting Up Amazon RDS as a Slave to a self-managed MySQL server]]></title>
  <link rel="alternate" type="text/html" href="/technology/setting-up-amazon-rds-as-a-slave-to-a-self-managed-mysql-server/"/>
  <id>/technology/setting-up-amazon-rds-as-a-slave-to-a-self-managed-mysql-server</id>
  <updated>2014-05-21 20:43:52 +0530T00:00:00-00:00</updated>
  <published>2014-05-21T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#mysql" term="mysql" /><category scheme="/tags/#RDS" term="RDS" /><category scheme="/tags/#AWS" term="AWS" /><category scheme="/tags/#replication" term="replication" />
  <content type="html">
  
    &lt;p&gt;Last week, we migrated our MySQL database server, which was running on an EC2 instance, to RDS. We hoped the migration process would be smooth.&lt;/p&gt;

&lt;p&gt;As always, migrating a large database has its challenges. Business folks expect the minimum possible downtime.&lt;/p&gt;

&lt;p&gt;The plan was simple.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch an RDS instance&lt;/li&gt;
  &lt;li&gt;Load a full dump into it&lt;/li&gt;
  &lt;li&gt;Configure it to act as a slave of the self-managed server (current master)&lt;/li&gt;
  &lt;li&gt;On the D-day, pull the website down and promote the RDS instance to take over as the new master&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We soon discovered that RDS comes with curtailed root permissions. There are several commands that are disallowed. Some of these include “CHANGE MASTER TO….”&lt;/p&gt;

&lt;p&gt;What do we do now?&lt;/p&gt;

&lt;p&gt;One option was to carry out the migration in one go, while the website was offline. This meant the downtime would have been several hours, instead of minutes. Obviously, not an acceptable option at all.&lt;/p&gt;

&lt;p&gt;Some R&amp;amp;D was all it took to discover how to proceed with the original approach.&lt;/p&gt;

&lt;p&gt;RDS comes with a bunch of stored procedures, which help you configure it as a slave. There is almost a one-to-one mapping of these stored procedures with the commands that are disallowed.&lt;/p&gt;

&lt;table class=&quot;table table-bordered table-condensed table-hover&quot;&gt;
&lt;tr&gt;&lt;th&gt;MySQL Command&lt;/th&gt;&lt;th&gt;Corrosponding Stored Proc&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CHANGE MASTER TO&lt;/td&gt;&lt;td&gt;mysql.rds_set_external_master&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;START SLAVE&lt;/td&gt;&lt;td&gt;mysql.rds_start_replication&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;STOP SLAVE&lt;/td&gt;&lt;td&gt;mysql.rds_stop_replication&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;RESET MASTER&lt;/td&gt;&lt;td&gt;mysql.rds_reset_external_master &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;So, Using these stored procedures, you can now configure your RDS instance as a slave to your self-managed MySQL server&lt;/p&gt;

&lt;p&gt;After loading a full dump to RDS, Call the stored procedure &lt;code&gt;mysql.rds_set_external_master&lt;/code&gt; like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CALL mysql.rds_set_external_master ('servername', port, 'user', 'password', 'binlog-file', binlog-offset, 0);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CALL mysql.rds_start_replication;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will make RDS a slave of your self managed mysql server. You can run “SHOW SLAVE STATUS” to see its working.&lt;/p&gt;

&lt;p&gt;When it is time to promote RDS to master. You call these stored procedures&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CALL mysql.rds_stop_replication;

CALL mysql.rds_reset_external_master;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s it. Now point your applications to the RDS instance and take your site live.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For your RDS to work as a slave, it needs permissions to connect to port 3306 of your current master. Make sure you open this port for the RDS instance.&lt;/p&gt;

&lt;p&gt;You can run the following command to find out the ip address of your rds instance&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ping -c rdsname.cpesx66wwe7y.ap-southeast-1.rds.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

  
  &lt;p&gt;&lt;a href=&quot;/technology/setting-up-amazon-rds-as-a-slave-to-a-self-managed-mysql-server/&quot;&gt;Setting Up Amazon RDS as a Slave to a self-managed MySQL server&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on May 21, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Beware of creating $HOME/.ssh folder by hand, when SELinux is turned on]]></title>
  <link rel="alternate" type="text/html" href="/technology/beware-of-creating-ssh-folder-by-hand-when-selinux-is-turned-on/"/>
  <id>/technology/beware-of-creating-ssh-folder-by-hand-when-selinux-is-turned-on</id>
  <updated>2014-05-23 12:32:45 +0530T00:00:00-00:00</updated>
  <published>2012-07-22T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#SSH" term="SSH" /><category scheme="/tags/#SELinux" term="SELinux" />
  <content type="html">
  
    &lt;p&gt;I was experimenting with &lt;code&gt;chef&lt;/code&gt; to manage our Linux boxes. As a standard practice, our application user &lt;code&gt;deployer&lt;/code&gt; is homed in &lt;code&gt;/applications/deployer&lt;/code&gt; rather than the usual &lt;code&gt;/home/deployer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To enable password less login, I appended my public key to &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; ssh-copy-id -i ~/.ssh/id_rsa deployer@remote.server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first time I run this command, I will be prompted for a password to install my key. After this, I can run the below command to login without a password:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -i ~/.ssh/id_rsa deployer@remote.server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, that did not work as expected.&lt;/p&gt;

&lt;p&gt;For some reason, &lt;code&gt;sshd&lt;/code&gt; was unable to read the &lt;code&gt;authorized_keys&lt;/code&gt; file. I checked all the usual things.. all looked fine. Everything seem to work just fine when &lt;code&gt;SELinux&lt;/code&gt; was running in &lt;code&gt;permissive&lt;/code&gt; mode on the remote server, but not when it was in &lt;code&gt;enforcing&lt;/code&gt; mode.&lt;/p&gt;

&lt;p&gt;Discovered that if &lt;code&gt;.ssh&lt;/code&gt; folder was created by hand (or even the folder containing &lt;code&gt;.ssh&lt;/code&gt; folder), we need to do few additional things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Open this file /etc/selinux/targeted/contexts/files/file_contexts.homedirs and append the following line to the bottom&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; /applications/deployer/[^/]*/\.ssh(/.*)?     system_u:object_r:ssh_home_t:s0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: remember to adjust the path as per your needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; run the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;restorecon -R -v /applications/deployer/.ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Again, remember to adjust the path as per your needs.&lt;/p&gt;

&lt;p&gt;Now you are all set!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; ssh -i ~/.ssh/id_rsa deployer@remote.server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;should log you in without asking for a password!&lt;/p&gt;

  
  &lt;p&gt;&lt;a href=&quot;/technology/beware-of-creating-ssh-folder-by-hand-when-selinux-is-turned-on/&quot;&gt;Beware of creating $HOME/.ssh folder by hand, when SELinux is turned on&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on July 22, 2012.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Importance of Date field in an email's Header]]></title>
  <link rel="alternate" type="text/html" href="/technology/importance-of-date-field-in-an-emails-header/"/>
  <id>/technology/importance-of-date-field-in-an-emails-header</id>
  <updated>2012-04-04 10:20:00 +0530T00:00:00-00:00</updated>
  <published>2012-04-04T00:00:00+05:30</published>
  
  <author>
    <name>eLitmus.com</name>
    <uri></uri>
    <email>site-admin@elitmus.com</email>
  </author>
  <category scheme="/tags/#email" term="email" /><category scheme="/tags/#header" term="header" /><category scheme="/tags/#spam" term="spam" />
  <content type="html">
  
    &lt;p&gt;So far, we paid little attention to email delivery issues. We knew delivering to rediffmail is a pain. So we discouraged our users from using rediffmail. Apart from that we had FCrDNS and SPF configured and working fine. We had also configured &lt;a href=&quot;http://www.dkim.org/&quot;&gt;DKIM&lt;/a&gt;. And then a month ago, we also added &lt;a href=&quot;http://www.dmarc.org/&quot;&gt;DMARC&lt;/a&gt; in monitor mode.&lt;/p&gt;

&lt;p&gt;We were happy! Until…&lt;/p&gt;

&lt;p&gt;Recently, we started getting loads of phishing emails from what appeared to originate from our own domain name [not our servers].&lt;/p&gt;

&lt;p&gt;It told us two things.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.elitmus.com&quot;&gt;eLitmus.com&lt;/a&gt; was growing in popularity&lt;/li&gt;
  &lt;li&gt;We cannot ignore email delivery issue any longer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We ran our email through &lt;a href=&quot;http://wiki.apache.org/spamassassin/SpamAssassin&quot;&gt;Spam Assassin&lt;/a&gt; checks and were surprised to see that we got a score of 6. Anything above 5 is BAD. It’s a straight spam! But we knew we were not spamming. These were transactional emails triggered by our website on certain events, such as &lt;em&gt;New registration, or Forgot Password&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It was almost by accident, we noticed that the timezone in the Date header of the email was appearing as +0580. Indian Standard Time (IST) is 5 hours and 30 minutes ahead of UTC. So this value should have been +0530, not +0580. Apparently, that is good enough reason for Spam Assassin to treat our mails as spam.&lt;/p&gt;

&lt;p&gt;Tracing backwards, we discovered a bug in our application code and fixed it. It was a single line fix.&lt;/p&gt;

&lt;p&gt;With this change, &lt;a href=&quot;http://wiki.apache.org/spamassassin/SpamAssassin&quot;&gt;Spam Assassin&lt;/a&gt; was happy to give us a score of zero.&lt;/p&gt;

&lt;p&gt;That is just one part of one header. There are ten others which have to be configured correctly.&lt;/p&gt;

&lt;p&gt;Here is an article with good insights in to how gmail calculates sender reputation. Its a little dated, but still relevent. &lt;a href=&quot;http://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=what%20is%20email%20reputation%3F%20how%20to%20calculate%20email%20reputation%3F%20how%20to%20calculate%20sender%20reputation%3F&amp;amp;source=web&amp;amp;cd=2&amp;amp;ved=0CCgQFjAB&amp;amp;url=http%3A%2F%2Fwww.ceas.cc%2F2006%2F19.pdf&amp;amp;ei=Pmp9T76THsnYrQewg7TsDA&amp;amp;usg=AFQjCNEb_tYLRePQlW_RfMJZTkSiWdpy4A&amp;amp;cad=rja&quot;&gt;Sender reputation in a large webmail service (PDF)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, here is a nice and free JSon API to check your &lt;a href=&quot;http://spamcheck.postmarkapp.com/&quot;&gt;email’s reputation&lt;/a&gt;.&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;/technology/importance-of-date-field-in-an-emails-header/&quot;&gt;Importance of Date field in an email's Header&lt;/a&gt; was originally published by eLitmus.com at &lt;a href=&quot;&quot;&gt;eLitmus Blog&lt;/a&gt; on April 04, 2012.&lt;/p&gt;</content>
</entry>

</feed>
